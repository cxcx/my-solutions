/***************************** 3th ********************************/
1th
    preduce {Ai}
    i := 0
    max := A[i]
    while i<Imax
        if A[i+1] > A[i]
            max := A[i]
    
3th
    preduce {Ai}(Ai:整数)
    sum := 0
    for i:=0 : Imax-1
        sum := sum + A[i]

4th
    preduce {Ai}
    val_pre := A[1]-A[0]
    for i:=2 : Imax-1
        if (A[i]-A[i-1])/val_pre>=1 or (A[i]-A[i-1])/val_pre<=-1
            val_pre = A[i]-A[i-1]

5th
    preduce {Ai},{Bi}
    n := 0
    sort({Ai})
    for i:=0 : Imax-2
        if A[i] equal A[i+1]
            n++
        if n>2 and A[i] not equal A[i+1] and i<Imax-1
            n := 0
            add a[i] to {Bi}

6th
    preduce {Ai}
    n := 0
    for i:=0 : Imax-1
        if  A[i]<0
            n++

7th
    preduce {Ai}
    loct := 0
    for i:= 0 : Imax-1
        if A[i]%2 equal 0
            loct = i

8th
    preduce {Ai}
    last := 0
    big_loct := 0
    for i:=0 : Imax-1
        if A[i]%2 equal 0
            if A[big_loct] <= A[i]
                big_loct = i

9th
    preduce {Ai}
    n := 0
    for i:=0 : 『(Imax-1)/2』
        if A[i] equal A[Imax-i]
            n++
    if n equal 『Imax/2』
        yes
    else
        not

10th
    preduce {n,x}
    s := 1
    if n>=0
        for i:=0 : n-1
            s := s*x
    else 
        for i:=0 : n-1
            s := s/x

11th
    preduce {x,y}
    temp := x
    x := y
    y := temp

12th
    temp1 := x
    temp2 := y
    x := z
    y := temp1
    z := temp2

13th


